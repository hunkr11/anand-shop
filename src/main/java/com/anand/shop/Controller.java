package com.anand.shop;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.anand.shop.model.Category;
import com.anand.shop.model.Item;
import com.anand.shop.model.Quantity;
import com.anand.shop.model.Stock;
import com.anand.shop.model.SubCategory;
import com.anand.shop.model.Supplier;
import com.anand.shop.repository.CategoryRepository;
import com.anand.shop.repository.ItemRepository;
import com.anand.shop.repository.QuantityRepository;
import com.anand.shop.repository.StockRepository;
import com.anand.shop.repository.SubCategoryRepository;
import com.anand.shop.repository.SupplierRepository;

@RestController // This means that this class is a Controller
@RequestMapping(path = "/anand-shop") // This means URL's start with /anand-shop (after Application path)
public class Controller {
	@Autowired // This means to get the bean called categoryRepository which is auto-generated by Spring, we will use it to handle the data
	private CategoryRepository categoryRepository;
	
	@Autowired
	private SubCategoryRepository subCategoryRepository;
	
	@Autowired
	private QuantityRepository quantityRepository;
	
	@Autowired
	private SupplierRepository supplierRepository;
	
	@Autowired
	private ItemRepository itemRepository;
	
	@Autowired
	private StockRepository stockRepository;

	@PostMapping(path = "/addCategory") // Map ONLY POST Requests
	public @ResponseBody String addCategory(@RequestBody Category category) {		
		categoryRepository.save(category);
		return "success";
	}
	
	@PostMapping(path = "/addSubCategory") // Map ONLY POST Requests
	public @ResponseBody String addSubCategory(@RequestBody SubCategory subCategory) {		
		subCategoryRepository.save(subCategory);
		return "success";
	}
	
	@PostMapping(path = "/addQuantity") // Map ONLY POST Requests
	public @ResponseBody String addQuantity(@RequestBody Quantity quantity) {		
		quantityRepository.save(quantity);
		return "success";
	}
	
	@PostMapping(path = "/addSupplier") // Map ONLY POST Requests
	public @ResponseBody String addSupplier(@RequestBody Supplier supplier) {		
		supplierRepository.save(supplier);
		return "success";
	}
	
	@PostMapping(path = "/addStock") // Map ONLY POST Requests
	public @ResponseBody String addStock(@RequestBody Stock stock) {		
		stockRepository.save(stock);
		return "success";
	}
	
	@PostMapping(path = "/addItem") // Map ONLY POST Requests
	public @ResponseBody String addItem(@RequestBody Item item) {		
		itemRepository.save(item);
		return "success";
	}
}
